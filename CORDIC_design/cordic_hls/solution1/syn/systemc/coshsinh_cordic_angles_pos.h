// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __coshsinh_cordic_angles_pos_H__
#define __coshsinh_cordic_angles_pos_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct coshsinh_cordic_angles_pos_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 64;
  static const unsigned AddressRange = 60;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(coshsinh_cordic_angles_pos_ram) {
        ram[0] = "0b0011111111100001100100111101110110010111111101100010101101101011";
        ram[1] = "0b0011111111010000010110000111100100111101110110010111111101100011";
        ram[2] = "0b0011111111000000000101101111000000000110100011011011100010111011";
        ram[3] = "0b0011111110110000000001101000110110111000101110101100011100010001";
        ram[4] = "0b0011111110100000000001101000110110111000101110101100011100010001";
        ram[5] = "0b0011111111000011111101111100111011011001000101101000011100101011";
        ram[6] = "0b0011111101111111111100101110010010001110100010100111000111011110";
        ram[7] = "0b0011111101101111111100101110010010001110100010100111000111011110";
        ram[8] = "0b0011111101100000011000100100110111010010111100011010100111111100";
        ram[9] = "0b0011111101001111111111111111101010100001100111000100011101110100";
        ram[10] = "0b0011111100111111111111111111101010100001100111000100011101110100";
        ram[11] = "0b0011111100101111111111111111101010100001100111000100011101110100";
        ram[12] = "0b0011111100011111111111111111101010100001100111000100011101110100";
        ram[13] = "0b0011111100001111111111111111101010100001100111000100011101110100";
        ram[14] = "0b0011111100000000000000000000111001111110110110100000101111100001";
        ram[15] = "0b0011111011110000000000000000111001111110110110100000101111100001";
        ram[16] = "0b0011111011100000000000000000000011000000011010100001111011110101";
        ram[17] = "0b0011111011010000000000000000000011000000011010100001111011110101";
        ram[18] = "0b0011111010111111111111111100101010000111000101001000101000111010";
        ram[19] = "0b0011111010101111111111111111011010000010000101000100110100101101";
        ram[20] = "0b0011111010100000000000000000011000111111110010100001011101010011";
        ram[21] = "0b0011111010010000000000000000011000111111110010100001011101010011";
        ram[22] = "0b0011111010000000000000000000011000111111110010100001011101010011";
        ram[23] = "0b0011111001110000000000000000011000111111110010100001011101010011";
        ram[24] = "0b0011111001011111111111111110100101010000011000010010110001001011";
        ram[25] = "0b0011111001001111111111111110100101010000011000010010110001001011";
        ram[26] = "0b0011111001000000000000000000001010111011000100011100101001001010";
        ram[27] = "0b0011111000110000000000000000001010111011000100011100101001001010";
        ram[28] = "0b0011111000011111111111111100110100101010100111101100010000000001";
        ram[29] = "0b0011111000001111111111111111101000110011110101011101000101000100";
        ram[30] = "0b0011110111111111111111111111101000110011110101011101000101000100";
        ram[31] = "0b0011110111101111111111111111101000110011110101011101000101000100";
        ram[32] = "0b0011110111100000000000000010101000100011001000011111010111100100";
        ram[33] = "0b0011110111010000000000000000011000011011110000101011100000010101";
        ram[34] = "0b0011110111000000000000000000011000011011110000101011100000010101";
        ram[35] = "0b0011110110110000000000000000011000011011110000101011100000010101";
        ram[36] = "0b0011110110100000000000000000011000011011110000101011100000010101";
        ram[37] = "0b0011110110010000000000000000011000011011110000101011100000010101";
        ram[38] = "0b0011110110000000000000000000011000011011110000101011100000010101";
        ram[39] = "0b0011110101101111111111111111010100101000100100000010100111100100";
        ram[40] = "0b0011110101100000000000000000011000011011110000101011100000010101";
        ram[41] = "0b0011110101001111111111111101111000011001100110101110001110011101";
        ram[42] = "0b0011110101000000000000000001110100101010101101111111111001011100";
        ram[43] = "0b0011110100101111111111111111000010001011111110001011010101101111";
        ram[44] = "0b0011110100100000000000000000101010111000010110100010110010001010";
        ram[45] = "0b0011110100010000000000000000101010111000010110100010110010001010";
        ram[46] = "0b0011110011111111111111111111011111101100111010110000100101011101";
        ram[47] = "0b0011110011101111111111111111011111101100111010110000100101011101";
        ram[48] = "0b0011110011100000000000000001100101111010001111101101010001100101";
        ram[49] = "0b0011110011010000000000000000000111011101100111011100011111010011";
        ram[50] = "0b0011110011000000000000000000000111011101100111011100011111010011";
        ram[51] = "0b0011110010101111111111111101010010000001111110010111011010000010";
        ram[52] = "0b0011110010011111111111111101010010000001111110010111011010000010";
        ram[53] = "0b0011110010001111111111111111101001001001011000011000101010011111";
        ram[54] = "0b0011110010000000000000000001000000001000011001001100111101011110";
        ram[55] = "0b0011110001110000000000000001000000001000011001001100111101011110";
        ram[56] = "0b0011110001100000000000000000000011101011110101001100011101010010";
        ram[57] = "0b0011110001001111111111111110001110011110100010010111111010001101";
        ram[58] = "0b0011110000111111111111111110001110011110100010010111111010001101";
        ram[59] = "0b0000000000000000000000000000000000000000000000000000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(coshsinh_cordic_angles_pos) {


static const unsigned DataWidth = 64;
static const unsigned AddressRange = 60;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


coshsinh_cordic_angles_pos_ram* meminst;


SC_CTOR(coshsinh_cordic_angles_pos) {
meminst = new coshsinh_cordic_angles_pos_ram("coshsinh_cordic_angles_pos_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~coshsinh_cordic_angles_pos() {
    delete meminst;
}


};//endmodule
#endif
