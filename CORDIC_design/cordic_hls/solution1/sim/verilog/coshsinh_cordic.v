// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="coshsinh_cordic,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.395400,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=39,HLS_SYN_FF=3636,HLS_SYN_LUT=6834}" *)

module coshsinh_cordic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        beta,
        m,
        n,
        ch,
        ch_ap_vld,
        sh,
        sh_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 59'b1;
parameter    ap_ST_st2_fsm_1 = 59'b10;
parameter    ap_ST_st3_fsm_2 = 59'b100;
parameter    ap_ST_st4_fsm_3 = 59'b1000;
parameter    ap_ST_st5_fsm_4 = 59'b10000;
parameter    ap_ST_st6_fsm_5 = 59'b100000;
parameter    ap_ST_st7_fsm_6 = 59'b1000000;
parameter    ap_ST_st8_fsm_7 = 59'b10000000;
parameter    ap_ST_st9_fsm_8 = 59'b100000000;
parameter    ap_ST_st10_fsm_9 = 59'b1000000000;
parameter    ap_ST_st11_fsm_10 = 59'b10000000000;
parameter    ap_ST_st12_fsm_11 = 59'b100000000000;
parameter    ap_ST_st13_fsm_12 = 59'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 59'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 59'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 59'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 59'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 59'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 59'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 59'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 59'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 59'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 59'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 59'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 59'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 59'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 59'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 59'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 59'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 59'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 59'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 59'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 59'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 59'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 59'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 59'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 59'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 59'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 59'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 59'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 59'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 59'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 59'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 59'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 59'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 59'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 59'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 59'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 59'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 59'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 59'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 59'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 59'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 59'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 59'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 59'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 59'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 59'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 59'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FB0000000000000 = 64'b11111110110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FE193DD97F62B6B = 64'b11111111100001100100111101110110010111111101100010101101101011;
parameter    ap_const_lv32_3A = 32'b111010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv64_3FE0000000000000 = 64'b11111111100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_BFF0000000000000 = 64'b1011111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] beta;
input  [31:0] m;
input  [31:0] n;
output  [63:0] ch;
output   ch_ap_vld;
output  [63:0] sh;
output   sh_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ch_ap_vld;
reg sh_ap_vld;

(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_74;
wire   [3:0] angles_neg_address0;
reg    angles_neg_ce0;
wire   [63:0] angles_neg_q0;
wire   [5:0] angles_pos_address0;
reg    angles_pos_ce0;
wire   [63:0] angles_pos_q0;
wire   [63:0] grp_fu_243_p2;
reg   [63:0] reg_294;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_109;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_116;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_124;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_132;
reg   [0:0] sel_tmp4_reg_716;
wire   [63:0] grp_fu_259_p2;
reg   [63:0] reg_302;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_147;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_154;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_162;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_170;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_178;
reg   [63:0] reg_310;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_188;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_195;
wire   [63:0] grp_fu_266_p2;
reg   [63:0] reg_315;
reg   [63:0] reg_321;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_211;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_218;
wire   [63:0] grp_fu_251_p2;
reg   [63:0] reg_328;
wire   [63:0] grp_fu_277_p2;
reg   [63:0] reg_335;
reg   [0:0] tmp_21_reg_711;
wire   [63:0] sign_factor_fu_382_p3;
reg   [63:0] sign_factor_reg_657;
wire   [31:0] j_fu_390_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_248;
wire   [0:0] tmp_3_fu_396_p2;
wire   [31:0] j_2_fu_413_p2;
reg   [31:0] j_2_reg_676;
reg   [63:0] angle_reg_681;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_262;
wire   [63:0] sigma_fu_461_p3;
reg   [63:0] sigma_reg_686;
reg   [63:0] factor_reg_691;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_272;
wire   [63:0] sigma_1_fu_516_p3;
reg   [63:0] sigma_1_reg_700;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_281;
wire   [0:0] tmp_8_fu_469_p2;
wire   [31:0] j_3_fu_524_p2;
reg   [31:0] j_3_reg_706;
wire   [0:0] tmp_21_fu_530_p2;
wire   [0:0] sel_tmp4_fu_560_p2;
wire   [63:0] angle_3_fu_571_p3;
reg   [63:0] angle_3_reg_728;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_300;
wire   [63:0] sigma_2_fu_620_p3;
reg   [63:0] sigma_2_reg_733;
reg   [63:0] beta_assign_2_reg_739;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_310;
wire   [63:0] beta_assign_3_fu_628_p3;
reg   [63:0] beta_assign_3_reg_744;
reg   [63:0] s2_2_reg_749;
wire   [63:0] c2_3_fu_634_p3;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_323;
wire   [63:0] s2_3_fu_641_p3;
reg   [63:0] ch_load_reg_120;
reg   [63:0] tmp_2_reg_132;
reg   [63:0] poweroftwo_reg_144;
reg   [31:0] j1_reg_156;
reg   [63:0] p_0_reg_165;
reg   [63:0] ch_load_2_reg_175;
reg   [63:0] sh_load_reg_186;
reg   [63:0] angle1_reg_197;
reg   [63:0] poweroftwo_1_reg_209;
reg   [31:0] j_1_reg_220;
reg   [63:0] p_1_reg_232;
wire  signed [63:0] tmp_5_fu_408_p1;
wire   [63:0] tmp_22_fu_566_p1;
reg    ap_sig_cseq_ST_st59_fsm_58;
reg    ap_sig_362;
reg   [63:0] grp_fu_243_p0;
reg   [63:0] grp_fu_243_p1;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_371;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_378;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_385;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_392;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_399;
reg   [63:0] grp_fu_251_p1;
reg   [63:0] grp_fu_259_p0;
reg   [63:0] grp_fu_259_p1;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_416;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_423;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_431;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_438;
reg   [63:0] grp_fu_266_p0;
reg   [63:0] grp_fu_266_p1;
reg   [63:0] grp_fu_277_p0;
reg   [63:0] grp_fu_286_p0;
wire   [63:0] beta_to_int_fu_340_p1;
wire   [10:0] tmp_fu_344_p4;
wire   [51:0] tmp_6_fu_354_p1;
wire   [0:0] notrhs_fu_364_p2;
wire   [0:0] notlhs_fu_358_p2;
wire   [0:0] tmp_12_fu_370_p2;
wire   [0:0] grp_fu_286_p2;
wire   [0:0] tmp_20_fu_376_p2;
wire   [31:0] tmp_4_fu_402_p2;
wire   [63:0] p_0_to_int_fu_419_p1;
wire   [10:0] tmp_23_fu_423_p4;
wire   [51:0] tmp_24_fu_433_p1;
wire   [0:0] notrhs1_fu_443_p2;
wire   [0:0] notlhs1_fu_437_p2;
wire   [0:0] tmp_25_fu_449_p2;
wire   [0:0] tmp_27_fu_455_p2;
wire   [63:0] p_1_to_int_fu_474_p1;
wire   [10:0] tmp_28_fu_478_p4;
wire   [51:0] tmp_29_fu_488_p1;
wire   [0:0] notrhs2_fu_498_p2;
wire   [0:0] notlhs2_fu_492_p2;
wire   [0:0] tmp_30_fu_504_p2;
wire   [0:0] tmp_32_fu_510_p2;
wire   [0:0] sel_tmp1_fu_542_p2;
wire   [0:0] sel_tmp2_fu_548_p2;
wire   [0:0] tmp1_fu_554_p2;
wire   [0:0] sel_tmp_fu_536_p2;
wire   [63:0] beta_assign_1_to_int_fu_578_p1;
wire   [10:0] tmp_33_fu_582_p4;
wire   [51:0] tmp_34_fu_592_p1;
wire   [0:0] notrhs3_fu_602_p2;
wire   [0:0] notlhs3_fu_596_p2;
wire   [0:0] tmp_35_fu_608_p2;
wire   [0:0] tmp_37_fu_614_p2;
reg   [1:0] grp_fu_243_opcode;
reg   [58:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'b1;
end

coshsinh_cordic_angles_neg #(
    .DataWidth( 64 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
angles_neg_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angles_neg_address0),
    .ce0(angles_neg_ce0),
    .q0(angles_neg_q0)
);

coshsinh_cordic_angles_pos #(
    .DataWidth( 64 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
angles_pos_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angles_pos_address0),
    .ce0(angles_pos_ce0),
    .q0(angles_pos_q0)
);

coshsinh_cordic_dadddsub_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
coshsinh_cordic_dadddsub_64ns_64ns_64_5_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_243_p0),
    .din1(grp_fu_243_p1),
    .opcode(grp_fu_243_opcode),
    .ce(1'b1),
    .dout(grp_fu_243_p2)
);

coshsinh_cordic_dadd_64ns_64ns_64_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
coshsinh_cordic_dadd_64ns_64ns_64_5_full_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_315),
    .din1(grp_fu_251_p1),
    .ce(1'b1),
    .dout(grp_fu_251_p2)
);

coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_259_p0),
    .din1(grp_fu_259_p1),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_266_p0),
    .din1(grp_fu_266_p1),
    .ce(1'b1),
    .dout(grp_fu_266_p2)
);

coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
coshsinh_cordic_dmul_64ns_64ns_64_6_max_dsp_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(ap_const_lv64_3FE0000000000000),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

coshsinh_cordic_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
coshsinh_cordic_dcmp_64ns_64ns_1_1_U5(
    .din0(grp_fu_286_p0),
    .din1(ap_const_lv64_0),
    .opcode(ap_const_lv5_4),
    .dout(grp_fu_286_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        angle1_reg_197 <= ap_const_lv64_3FE193DD97F62B6B;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        angle1_reg_197 <= angle_3_reg_728;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        ch_load_2_reg_175 <= ch_load_reg_120;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        ch_load_2_reg_175 <= c2_3_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        ch_load_reg_120 <= grp_fu_243_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        ch_load_reg_120 <= ap_const_lv64_3FF0000000000000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        j1_reg_156 <= j_2_reg_676;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        j1_reg_156 <= j_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        j_1_reg_220 <= ap_const_lv32_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        j_1_reg_220 <= j_3_reg_706;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        p_0_reg_165 <= reg_294;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        p_0_reg_165 <= beta;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        p_1_reg_232 <= p_0_reg_165;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        p_1_reg_232 <= beta_assign_3_reg_744;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        poweroftwo_1_reg_209 <= poweroftwo_reg_144;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        poweroftwo_1_reg_209 <= reg_335;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        poweroftwo_reg_144 <= reg_302;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        poweroftwo_reg_144 <= ap_const_lv64_3FB0000000000000;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_3_fu_396_p2))) begin
        sh_load_reg_186 <= tmp_2_reg_132;
    end else if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        sh_load_reg_186 <= s2_3_fu_641_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        tmp_2_reg_132 <= grp_fu_251_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        tmp_2_reg_132 <= ap_const_lv64_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        angle_3_reg_728 <= angle_3_fu_571_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        angle_reg_681 <= angles_neg_q0;
        sigma_reg_686[63] <= sigma_fu_461_p3[63];
    end
end

always @ (posedge ap_clk) begin
    if ((~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st47_fsm_46))) begin
        beta_assign_2_reg_739 <= grp_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        beta_assign_3_reg_744 <= beta_assign_3_fu_628_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        factor_reg_691 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_3_fu_396_p2))) begin
        j_2_reg_676 <= j_2_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == tmp_8_fu_469_p2))) begin
        j_3_reg_706 <= j_3_fu_524_p2;
        sigma_1_reg_700[63] <= sigma_1_fu_516_p3[63];
        tmp_21_reg_711 <= tmp_21_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | ((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(sel_tmp4_reg_716 == 1'b0)))) begin
        reg_294 <= grp_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st48_fsm_47)))) begin
        reg_302 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        reg_310 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st48_fsm_47)) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st42_fsm_41)))) begin
        reg_315 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        reg_321 <= grp_fu_243_p2;
        reg_328 <= grp_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st42_fsm_41) | ((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & ~(1'b0 == tmp_21_reg_711)))) begin
        reg_335 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(sel_tmp4_reg_716 == 1'b0))) begin
        s2_2_reg_749 <= grp_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        sel_tmp4_reg_716 <= sel_tmp4_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        sigma_2_reg_733[63] <= sigma_2_fu_620_p3[63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        sign_factor_reg_657[63] <= sign_factor_fu_382_p3[63];
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        angles_neg_ce0 = 1'b1;
    end else begin
        angles_neg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        angles_pos_ce0 = 1'b1;
    end else begin
        angles_pos_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_371) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_272) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_431) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_116) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_195) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_378) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_74) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_211) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_281) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_438) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_248) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_154) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_300) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_124) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_385) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_262) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_218) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_170) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_392) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_310) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_399) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_416) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_132) begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_323) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_362) begin
        ap_sig_cseq_ST_st59_fsm_58 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st59_fsm_58 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_109) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_423) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_147) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_188) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        ch_ap_vld = 1'b1;
    end else begin
        ch_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_3_fu_396_p2)) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42)))) begin
        grp_fu_243_opcode = ap_const_lv2_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (~(sel_tmp4_reg_716 == 1'b0) & (1'b1 == ap_sig_cseq_ST_st49_fsm_48)))) begin
        grp_fu_243_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_243_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_243_p0 = reg_321;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_243_p0 = reg_294;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_243_p0 = ch_load_2_reg_175;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_243_p0 = p_1_reg_232;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        grp_fu_243_p0 = ch_load_reg_120;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_fu_243_p0 = p_0_reg_165;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_243_p0 = ap_const_lv64_3FF0000000000000;
    end else begin
        grp_fu_243_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_243_p1 = reg_302;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        grp_fu_243_p1 = reg_315;
    end else if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        grp_fu_243_p1 = reg_310;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_243_p1 = poweroftwo_reg_144;
    end else begin
        grp_fu_243_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_251_p1 = reg_328;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_251_p1 = sh_load_reg_186;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        grp_fu_251_p1 = tmp_2_reg_132;
    end else begin
        grp_fu_251_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_259_p0 = sigma_2_reg_733;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        grp_fu_259_p0 = reg_302;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_259_p0 = sigma_1_reg_700;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_259_p0 = sign_factor_reg_657;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_259_p0 = factor_reg_691;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        grp_fu_259_p0 = sigma_reg_686;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_259_p0 = poweroftwo_reg_144;
    end else begin
        grp_fu_259_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_259_p1 = reg_328;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_259_p1 = sh_load_reg_186;
    end else if (((1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        grp_fu_259_p1 = poweroftwo_1_reg_209;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_259_p1 = ch_load_2_reg_175;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_259_p1 = tmp_2_reg_132;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_259_p1 = reg_294;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_fu_259_p1 = angle_reg_681;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_259_p1 = ap_const_lv64_4000000000000000;
    end else begin
        grp_fu_259_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_266_p0 = sigma_2_reg_733;
    end else if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42))) begin
        grp_fu_266_p0 = reg_302;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_266_p0 = sigma_1_reg_700;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_266_p0 = sign_factor_reg_657;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_266_p0 = factor_reg_691;
    end else begin
        grp_fu_266_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_266_p1 = reg_321;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        grp_fu_266_p1 = ch_load_2_reg_175;
    end else if (((1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        grp_fu_266_p1 = angle1_reg_197;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_266_p1 = sh_load_reg_186;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_266_p1 = ch_load_reg_120;
    end else begin
        grp_fu_266_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_277_p0 = poweroftwo_1_reg_209;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_277_p0 = angle1_reg_197;
    end else begin
        grp_fu_277_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        grp_fu_286_p0 = reg_294;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_286_p0 = p_1_reg_232;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_286_p0 = p_0_reg_165;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_286_p0 = beta;
    end else begin
        grp_fu_286_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st59_fsm_58)) begin
        sh_ap_vld = 1'b1;
    end else begin
        sh_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == tmp_3_fu_396_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st24_fsm_23 : begin
            if (~(1'b0 == tmp_8_fu_469_p2)) begin
                ap_NS_fsm = ap_ST_st55_fsm_54;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign angle_3_fu_571_p3 = ((tmp_21_reg_711[0:0] === 1'b1) ? reg_335 : angles_pos_q0);

assign angles_neg_address0 = tmp_5_fu_408_p1;

assign angles_pos_address0 = tmp_22_fu_566_p1;

always @ (*) begin
    ap_sig_109 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_116 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_124 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_132 = (1'b1 == ap_CS_fsm[ap_const_lv32_34]);
end

always @ (*) begin
    ap_sig_147 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_154 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_170 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_188 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_195 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_211 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_218 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_248 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_262 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_272 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_281 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_300 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_310 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_323 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

always @ (*) begin
    ap_sig_362 = (1'b1 == ap_CS_fsm[ap_const_lv32_3A]);
end

always @ (*) begin
    ap_sig_371 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_378 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_385 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_392 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_399 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_416 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_423 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_431 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_438 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_74 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign beta_assign_1_to_int_fu_578_p1 = reg_294;

assign beta_assign_3_fu_628_p3 = ((sel_tmp4_reg_716[0:0] === 1'b1) ? beta_assign_2_reg_739 : reg_294);

assign beta_to_int_fu_340_p1 = beta;

assign c2_3_fu_634_p3 = ((sel_tmp4_reg_716[0:0] === 1'b1) ? reg_294 : reg_321);

assign ch = grp_fu_259_p2;

assign j_2_fu_413_p2 = (ap_const_lv32_1 + j1_reg_156);

assign j_3_fu_524_p2 = (ap_const_lv32_1 + j_1_reg_220);

assign j_fu_390_p2 = (ap_const_lv32_0 - m);

assign notlhs1_fu_437_p2 = ((tmp_23_fu_423_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_492_p2 = ((tmp_28_fu_478_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_596_p2 = ((tmp_33_fu_582_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs_fu_358_p2 = ((tmp_fu_344_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_443_p2 = ((tmp_24_fu_433_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_498_p2 = ((tmp_29_fu_488_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_602_p2 = ((tmp_34_fu_592_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs_fu_364_p2 = ((tmp_6_fu_354_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign p_0_to_int_fu_419_p1 = p_0_reg_165;

assign p_1_to_int_fu_474_p1 = p_1_reg_232;

assign s2_3_fu_641_p3 = ((sel_tmp4_reg_716[0:0] === 1'b1) ? s2_2_reg_749 : reg_328);

assign sel_tmp1_fu_542_p2 = ((j_1_reg_220 == ap_const_lv32_D) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_548_p2 = ((j_1_reg_220 == ap_const_lv32_4) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_560_p2 = (tmp1_fu_554_p2 | sel_tmp_fu_536_p2);

assign sel_tmp_fu_536_p2 = ((j_1_reg_220 == ap_const_lv32_28) ? 1'b1 : 1'b0);

assign sh = grp_fu_266_p2;

assign sigma_1_fu_516_p3 = ((tmp_32_fu_510_p2[0:0] === 1'b1) ? ap_const_lv64_BFF0000000000000 : ap_const_lv64_3FF0000000000000);

assign sigma_2_fu_620_p3 = ((tmp_37_fu_614_p2[0:0] === 1'b1) ? ap_const_lv64_BFF0000000000000 : ap_const_lv64_3FF0000000000000);

assign sigma_fu_461_p3 = ((tmp_27_fu_455_p2[0:0] === 1'b1) ? ap_const_lv64_BFF0000000000000 : ap_const_lv64_3FF0000000000000);

assign sign_factor_fu_382_p3 = ((tmp_20_fu_376_p2[0:0] === 1'b1) ? ap_const_lv64_BFF0000000000000 : ap_const_lv64_3FF0000000000000);

assign tmp1_fu_554_p2 = (sel_tmp1_fu_542_p2 | sel_tmp2_fu_548_p2);

assign tmp_12_fu_370_p2 = (notrhs_fu_364_p2 | notlhs_fu_358_p2);

assign tmp_20_fu_376_p2 = (tmp_12_fu_370_p2 & grp_fu_286_p2);

assign tmp_21_fu_530_p2 = (($signed(j_3_fu_524_p2) > $signed(32'b111100)) ? 1'b1 : 1'b0);

assign tmp_22_fu_566_p1 = j_1_reg_220;

assign tmp_23_fu_423_p4 = {{p_0_to_int_fu_419_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_24_fu_433_p1 = p_0_to_int_fu_419_p1[51:0];

assign tmp_25_fu_449_p2 = (notrhs1_fu_443_p2 | notlhs1_fu_437_p2);

assign tmp_27_fu_455_p2 = (tmp_25_fu_449_p2 & grp_fu_286_p2);

assign tmp_28_fu_478_p4 = {{p_1_to_int_fu_474_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_29_fu_488_p1 = p_1_to_int_fu_474_p1[51:0];

assign tmp_30_fu_504_p2 = (notrhs2_fu_498_p2 | notlhs2_fu_492_p2);

assign tmp_32_fu_510_p2 = (tmp_30_fu_504_p2 & grp_fu_286_p2);

assign tmp_33_fu_582_p4 = {{beta_assign_1_to_int_fu_578_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_34_fu_592_p1 = beta_assign_1_to_int_fu_578_p1[51:0];

assign tmp_35_fu_608_p2 = (notrhs3_fu_602_p2 | notlhs3_fu_596_p2);

assign tmp_37_fu_614_p2 = (tmp_35_fu_608_p2 & grp_fu_286_p2);

assign tmp_3_fu_396_p2 = (($signed(j1_reg_156) < $signed(32'b1)) ? 1'b1 : 1'b0);

assign tmp_4_fu_402_p2 = (ap_const_lv32_0 - j1_reg_156);

assign tmp_5_fu_408_p1 = $signed(tmp_4_fu_402_p2);

assign tmp_6_fu_354_p1 = beta_to_int_fu_340_p1[51:0];

assign tmp_8_fu_469_p2 = (($signed(j_1_reg_220) > $signed(n)) ? 1'b1 : 1'b0);

assign tmp_fu_344_p4 = {{beta_to_int_fu_340_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

always @ (posedge ap_clk) begin
    sign_factor_reg_657[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
    sigma_reg_686[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
    sigma_1_reg_700[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
    sigma_2_reg_733[62:0] <= 63'b011111111110000000000000000000000000000000000000000000000000000;
end

endmodule //coshsinh_cordic
